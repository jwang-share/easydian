// Generated by CoffeeScript 1.3.3
var Logger, util, winston;

util = require('util');

winston = require('winston');

Logger = (function() {

  function Logger(name, log_level) {
    var ConsoleTransport, FileTransport;
    this.log_level = log_level != null ? log_level : "info";
    ConsoleTransport = new winston.transports.Console({
      colorize: 'true',
      level: config.LOG_LEVEL
    });
    FileTransport = new winston.transports.File({
      filename: "" + name + ".log"
    });
    this.logger = new winston.Logger({
      transports: [ConsoleTransport]
    });
  }

  Logger.prototype.get_timestr = function() {
    var now, timestr;
    now = new Date();
    timestr = now.getFullYear() + "/" + (now.getMonth() + 1) + "/" + now.getDate();
    timestr += " " + now.getHours() + ":" + now.getMinutes() + ":" + now.getSeconds();
    timestr += "." + now.getMilliseconds();
    return timestr;
  };

  Logger.prototype.info = function(msg, obj) {
    if (obj != null) {
      msg += ": " + util.inspect(obj);
    }
    return this.logger.info(" " + this.get_timestr() + "\t" + msg);
  };

  Logger.prototype.error = function(msg, obj) {
    if (obj != null) {
      msg += ": " + util.inspect(obj);
    }
    return this.logger.error(this.get_timestr() + "\t" + msg);
  };

  Logger.prototype.debug = function(msg, obj) {
    if (this.log_level !== 'debug') {
      return;
    }
    if (obj != null) {
      msg += ": " + util.inspect(obj);
    }
    return this.logger.debug(this.get_timestr() + "\t" + msg);
  };

  Logger.prototype.etrace = function(err) {
    return this.error(err.stack);
  };

  return Logger;

})();

module.exports = Logger;
